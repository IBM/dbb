###########
# ADO template to compute and create the release tag
# nested template in deployment/deployReleasePackage
# 
# High-level flow
#  -1- Uses the computed pipeline tag from the Stage:Build/Job:Tag 
#  -2- creates the git tag using the AZ CLI REST interface and the provided automation token
#
# Pre-Requisites 
#  - AZ CLI installed on the runner 


parameters:
  - name: environmentName
    type: string

# Template to compute and create the release tag
steps:
  - checkout: none 
  - bash: |

      # local Variables
      rc=0
      PGM="tagging/createProductionReleaseTag.yml"

      # If release type is defined
      if [ ! -z "$(releaseType)" ]; then

      # Create new tag
      echo "[INFO] Creating Tag $(nextReleaseName) as latest production state."
      az rest \
         --method post \
         --headers "Authorization=Bearer $AZURE_DEVOPS_EXT_PAT" \
         --url $(System.CollectionUri)/$(System.TeamProjectId)/_apis/git/repositories/$(application)/annotatedtags\?api-version\=7.1-preview.1 \
         --body "{ \"name\": \"$(nextReleaseName)\",  \"taggedObject\": { \"objectId\": \"$(Build.SourceVersion)\" }, \"message\": \"Release Candidate created by pipeline $(Build.BuildNumber) \"} " \
         --resource 499b84ac-1321-427f-aa17-267ca6975798
      # catch RC rest command return code
      rc=$?

      if [ $rc -eq 0 ]; then
        echo "${PGM}: [INFO] - AZ REST command has completed successfully."
      else
        echo "${PGM}: [WARNING] - AZ REST command has ended with a return code other than 0. rc="$rc
        exit rc
      fi

      else
        echo "${PGM}: [WARNING] - No release type has been specified"
        exit 1
      fi
    
    condition :  ${{ eq(parameters.environmentName, 'Production') }}
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
    displayName: "Create Release Tag"
