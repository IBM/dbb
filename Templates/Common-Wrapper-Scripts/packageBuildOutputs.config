#################################################################################
## packageBuildOutputs.sh parameters      #######################################
#################################################################################

# Path to PackageBuildOutputs.groovy script from the DBB community repository
PackagingScript="/var/dbb/extensions/dbb20/Pipeline/PackageBuildOutputs/PackageBuildOutputs.groovy"   

# Absolute path of a property file containing application specific packaging details. 
PkgPropFile="/var/dbb/extensions/dbb20/Pipeline/PackageBuildOutputs/packageBuildOutputs.properties"

# PackageBuildOutputs.groovy configuration
# Flag to add the deploy type extension to the member in the package tar file. (Optional)
# To activate set it to true
addExtension=true

# Artifact repository upload options
#  the below section configures the Publishing
#  to Artifact Repository such as JFrog Artifactory or Sonartype Nexus
# Note: 
#  These properties only need to be configured if the publishing through the
#  PackageBuildOutputs.groovy script is used. And if publish=true.

# Flag to indicate package upload to the provided Artifactory server.
# Set to true to enable package upload
# can be overridden by cli parm -p
publish=false

# URL to the Artifact repository server
# e.q.: artifactRepositoryUrl=http://10.3.20.231:8081/artifactory
artifactRepositoryUrl=http://10.3.20.231:8081/artifactory

# User to connect to the Artifact repository server
# e.q.:  artifactRepositoryUser=admin
artifactRepositoryUser=admin 

# Password to connect to the Artifact repository server
# e.q.: artifactRepositoryPassword=xxxxx
artifactRepositoryPassword=artifactoryadmin 

# (Computed)
# Method to return the pattern for the artifact repository name to store the build
# e.q.: $App-repo-local
computeArtifactRepositoryName() {
    echo "${App}-repo-local"
}

# (Computed)
# Method to return the directory path in the repository to store the build
# the default path in the repository is the branch name
# e.q.: $Branch
# If the type of pipeline is specified, we are appending it to the directory where
# the build is stored
computeArtifactRepositoryDirectory() {
    if [ -z "${PipelineType}" ]; then
        echo "${Branch}"
    else 
        echo "${Branch}/${PipelineType}"
    fi

}

# Path of a property file containing application specific artifact repository details.
# application specific artifactRepositoryPropertyFile
# e.q.: application-conf/packageBuildOutputs.properties
# see template:
# https://github.com/IBM/dbb/blob/main/Pipeline/PackageBuildOutputs/appArtifactRepository.properties
artifactRepositoryPropertyFile=

#################################################################################
## packageBuildOutputs.sh parameters -end    ####################################
#################################################################################